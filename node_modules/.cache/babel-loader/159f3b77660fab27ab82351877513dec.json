{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\project\\\\Front-End\\\\Real-TIme-Chat-APP\\\\real-time-chat-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport \"./css/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:3001\");\n\nfunction App() {\n  _s();\n\n  //STATE//\n  const [name, setName] = useState(\"\");\n  const [chat, setChat] = useState(false);\n  const [sendMessage, setSendMessage] = useState(\"\");\n  const [allChat, setAllChat] = useState([]);\n  const room_id = 1;\n\n  function join() {\n    if (name !== \"\" && name.length >= 3) {\n      setChat(true);\n      socket.emit(\"join_room\", name, room_id);\n    }\n  }\n\n  const UserData = {\n    room_id: room_id,\n    message: sendMessage,\n    author: name,\n    time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes()\n  };\n\n  const sentMessage = async () => {\n    if (sendMessage !== \"\") {\n      await socket.emit(\"myData\", UserData);\n    }\n  };\n\n  socket.on(\"connect\", () => {\n    console.log(socket.id); // x8WIv7-mJelg7on_ALbx\n  }); // useEffect(() => {\n  //   socket.on(\n  //     \"backMessage\",\n  //     (message) => {\n  //       console.log(\"=>>>\", message);\n  //     },\n  //     [socket]\n  //   );\n  // });\n  // socket.on(\"sentBackFromServer\", (data) => {\n  //   console.log(data);\n  // });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"HxxClcy4xFu266x/Jvp8X3klbvw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/project/Front-End/Real-TIme-Chat-APP/real-time-chat-app/src/App.js"],"names":["useEffect","useState","io","socket","App","name","setName","chat","setChat","sendMessage","setSendMessage","allChat","setAllChat","room_id","join","length","emit","UserData","message","author","time","Date","now","getHours","getMinutes","sentMessage","on","console","log","id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAO,eAAP;;AAEA,MAAMC,MAAM,GAAGD,EAAE,CAAC,uBAAD,CAAjB;;AAEA,SAASE,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMY,OAAO,GAAG,CAAhB;;AAEA,WAASC,IAAT,GAAgB;AACd,QAAIT,IAAI,KAAK,EAAT,IAAeA,IAAI,CAACU,MAAL,IAAe,CAAlC,EAAqC;AACnCP,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAL,MAAAA,MAAM,CAACa,IAAP,CAAY,WAAZ,EAAyBX,IAAzB,EAA+BQ,OAA/B;AACD;AACF;;AAED,QAAMI,QAAQ,GAAG;AACfJ,IAAAA,OAAO,EAAEA,OADM;AAEfK,IAAAA,OAAO,EAAET,WAFM;AAGfU,IAAAA,MAAM,EAAEd,IAHO;AAIfe,IAAAA,IAAI,EACF,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,EAAqBC,QAArB,KAAkC,GAAlC,GAAwC,IAAIF,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,EAAqBE,UAArB;AAL3B,GAAjB;;AAQA,QAAMC,WAAW,GAAG,YAAY;AAC9B,QAAIhB,WAAW,KAAK,EAApB,EAAwB;AACtB,YAAMN,MAAM,CAACa,IAAP,CAAY,QAAZ,EAAsBC,QAAtB,CAAN;AACD;AACF,GAJD;;AAMAd,EAAAA,MAAM,CAACuB,EAAP,CAAU,SAAV,EAAqB,MAAM;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYzB,MAAM,CAAC0B,EAAnB,EADyB,CACD;AACzB,GAFD,EA7Ba,CAiCb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AA8CD;;GA7FQzB,G;;KAAAA,G;AA+FT,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport \"./css/App.css\";\n\nconst socket = io(\"http://localhost:3001\");\n\nfunction App() {\n  //STATE//\n  const [name, setName] = useState(\"\");\n  const [chat, setChat] = useState(false);\n  const [sendMessage, setSendMessage] = useState(\"\");\n  const [allChat, setAllChat] = useState([]);\n  const room_id = 1;\n\n  function join() {\n    if (name !== \"\" && name.length >= 3) {\n      setChat(true);\n      socket.emit(\"join_room\", name, room_id);\n    }\n  }\n\n  const UserData = {\n    room_id: room_id,\n    message: sendMessage,\n    author: name,\n    time:\n      new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes(),\n  };\n\n  const sentMessage = async () => {\n    if (sendMessage !== \"\") {\n      await socket.emit(\"myData\", UserData);\n    }\n  };\n\n  socket.on(\"connect\", () => {\n    console.log(socket.id); // x8WIv7-mJelg7on_ALbx\n  });\n\n  // useEffect(() => {\n  //   socket.on(\n  //     \"backMessage\",\n  //     (message) => {\n  //       console.log(\"=>>>\", message);\n  //     },\n  //     [socket]\n  //   );\n  // });\n\n  // socket.on(\"sentBackFromServer\", (data) => {\n  //   console.log(data);\n  // });\n\n  return (\n    <div>\n      {/* {!chat ? (\n        <div className=\"container\">\n          <div className=\"join-page\">\n            <h2>JOIN ROOM</h2>\n            <div className=\"box-wrapper\">\n              <input\n                placeholder=\"What's your name ?\"\n                id=\"join-input\"\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n              />\n              <button id=\"join-btn\" onClick={join}>\n                Join Chat\n              </button>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"container\">\n          <h1>Chat Room</h1>\n          <div className=\"chat-box\">\n            {allChat.map((message) => (\n              <div className=\"message-item\">\n                <h3>{message.message}</h3>\n                <h5>{message.time}</h5>\n                <h4>{message.author}</h4>\n              </div>\n            ))}\n\n            <div className=\"sent\">\n              <input\n                placeholder=\"Write Something ...\"\n                onChange={(e) => {\n                  setSendMessage(e.target.value);\n                }}\n              />\n              <button onClick={sentMessage}>Sent</button>\n            </div>\n          </div>\n        </div>\n      )} */}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}