{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\project\\\\Front-End\\\\Real-TIme-Chat-APP\\\\real-time-chat-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./css/App.css\";\nimport io from \"socket.io-client\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:4001\");\n\nfunction App() {\n  _s();\n\n  //STATE//\n  const [name, setName] = useState(\"\");\n  const [chat, setChat] = useState(false);\n  const [sendMessage, setSendMessage] = useState(\"\");\n  const [allChat, setAllChat] = useState([]);\n  const room_id = 1;\n\n  function formatAMPM(date) {\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    var ampm = hours >= 12 ? \"pm\" : \"am\";\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    var strTime = hours + \":\" + minutes + \" \" + ampm;\n    return strTime;\n  }\n\n  const UserData = {\n    room_id: room_id,\n    message: sendMessage,\n    author: name,\n    time: formatAMPM(new Date()) // new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes(),\n\n  };\n\n  const sentMessage = async () => {\n    if (sendMessage !== \"\") {\n      await socket.emit(\"myData\", UserData);\n      setAllChat(list => [...list, UserData]);\n      setSendMessage(\"\");\n    }\n  };\n\n  const joinRoom = () => {\n    if (name !== \"\" && name.length >= 3) {\n      setChat(true);\n      socket.emit(\"join_room\", name, room_id);\n    }\n  };\n\n  useEffect(() => {\n    socket.on(\"dataBack\", data => {\n      setAllChat(list => [...list, data]);\n    });\n  }, [socket]);\n\n  const handleKeyPress = event => {\n    if (event.keyCode === 13 || event.which === 13) {\n      sentMessage();\n    }\n  };\n\n  const HandleJoinRoom = event => {\n    if (event.keyCode === 13 || event.which === 13) {\n      joinRoom();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !chat ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"join-page\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"JOIN ROOM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"What's your name ?\",\n            id: \"join-input\",\n            onChange: e => {\n              setName(e.target.value);\n            },\n            onKeyPress: HandleJoinRoom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"join-btn\",\n            onClick: joinRoom,\n            children: \"Join Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-box\",\n        children: [/*#__PURE__*/_jsxDEV(ScrollToBottom, {\n          className: \"scroll\",\n          children: allChat.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: name !== message.author ? \"message-item\" : \"item-author\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: name !== message.author ? \"h3\" : \"h3-author\",\n              children: message.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: name === message.author ? \"You\" : message.author\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: message.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sent\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Write Something ...\",\n            value: sendMessage,\n            onChange: e => {\n              setSendMessage(e.target.value);\n            },\n            onKeyPress: handleKeyPress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sentMessage,\n            children: \"Sent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Nl8L7xORcuEuTfL+4TkuOWvTv9k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/project/Front-End/Real-TIme-Chat-APP/real-time-chat-app/src/App.js"],"names":["useEffect","useState","io","ScrollToBottom","socket","connect","App","name","setName","chat","setChat","sendMessage","setSendMessage","allChat","setAllChat","room_id","formatAMPM","date","hours","getHours","minutes","getMinutes","ampm","strTime","UserData","message","author","time","Date","sentMessage","emit","list","joinRoom","length","on","data","handleKeyPress","event","keyCode","which","HandleJoinRoom","e","target","value","map","display"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./css/App.css\";\nimport io from \"socket.io-client\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\n\nconst socket = io.connect(\"http://localhost:4001\");\n\nfunction App() {\n  //STATE//\n  const [name, setName] = useState(\"\");\n  const [chat, setChat] = useState(false);\n  const [sendMessage, setSendMessage] = useState(\"\");\n  const [allChat, setAllChat] = useState([]);\n  const room_id = 1;\n\n  function formatAMPM(date) {\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    var ampm = hours >= 12 ? \"pm\" : \"am\";\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    var strTime = hours + \":\" + minutes + \" \" + ampm;\n    return strTime;\n  }\n\n  const UserData = {\n    room_id: room_id,\n    message: sendMessage,\n    author: name,\n    time: formatAMPM(new Date()),\n    // new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes(),\n  };\n\n  const sentMessage = async () => {\n    if (sendMessage !== \"\") {\n      await socket.emit(\"myData\", UserData);\n      setAllChat((list) => [...list, UserData]);\n      setSendMessage(\"\");\n    }\n  };\n\n  const joinRoom = () => {\n    if (name !== \"\" && name.length >= 3) {\n      setChat(true);\n      socket.emit(\"join_room\", name, room_id);\n    }\n  };\n\n  useEffect(() => {\n    socket.on(\"dataBack\", (data) => {\n      setAllChat((list) => [...list, data]);\n    });\n  }, [socket]);\n\n  const handleKeyPress = (event) => {\n    if (event.keyCode === 13 || event.which === 13) {\n      sentMessage();\n    }\n  };\n\n  const HandleJoinRoom = (event) => {\n    if (event.keyCode === 13 || event.which === 13) {\n      joinRoom();\n    }\n  };\n\n  return (\n    <div>\n      {!chat ? (\n        <div className=\"container\">\n          <div className=\"join-page\">\n            <h2>JOIN ROOM</h2>\n            <div className=\"box-wrapper\">\n              <input\n                placeholder=\"What's your name ?\"\n                id=\"join-input\"\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n                onKeyPress={HandleJoinRoom}\n              />\n              <button id=\"join-btn\" onClick={joinRoom}>\n                Join Chat\n              </button>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"container\">\n          <h1>Chat Room</h1>\n          <div className=\"chat-box\">\n            <ScrollToBottom className=\"scroll\">\n              {allChat.map((message) => (\n                <div\n                  className={\n                    name !== message.author ? \"message-item\" : \"item-author\"\n                  }\n                >\n                  <h3 className={name !== message.author ? \"h3\" : \"h3-author\"}>\n                    {message.message}\n                  </h3>\n                  <div\n                    style={{\n                      display: \"flex\",\n                    }}\n                  >\n                    <h4>{name === message.author ? \"You\" : message.author}</h4>\n                    <h5>{message.time}</h5>\n                  </div>\n                </div>\n              ))}\n            </ScrollToBottom>\n            <div className=\"sent\">\n              <input\n                placeholder=\"Write Something ...\"\n                value={sendMessage}\n                onChange={(e) => {\n                  setSendMessage(e.target.value);\n                }}\n                onKeyPress={handleKeyPress}\n              />\n              <button onClick={sentMessage}>Sent</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}