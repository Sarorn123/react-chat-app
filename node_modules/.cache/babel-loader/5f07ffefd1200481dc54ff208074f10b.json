{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\project\\\\Front-End\\\\Real-TIme-Chat-APP\\\\real-time-chat-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./css/App.css\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:4001\");\n\nfunction App() {\n  _s();\n\n  //STATE//\n  const [name, setName] = useState(\"\");\n  const [chat, setChat] = useState(false);\n  const [sendMessage, setSendMessage] = useState(\"\");\n  const [allChat, setAllChat] = useState([]);\n  const room_id = 1; // function join() {\n  //   if (name !== \"\" && name.length >= 3) {\n  //     setChat(true);\n  //     socket.emit(\"join_room\", name, room_id);\n  //   }\n  // }\n  // const UserData = {\n  //   room_id: room_id,\n  //   message: sendMessage,\n  //   author: name,\n  //   time:\n  //     new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes(),\n  // };\n  // const sentMessage = async () => {\n  //   if (sendMessage !== \"\") {\n  //     await socket.emit(\"myData\", UserData);\n  //   }\n  // };\n\n  const data = \"test\";\n\n  const joinRoom = () => {\n    if (name !== \"\" && name.length >= 3) {\n      setChat(true);\n      socket.emit(\"join_room\", name, room_id);\n    }\n  };\n\n  useEffect(() => {\n    socket.on(\"back\", data => {\n      console.log(data);\n    });\n  }, [socket]); // socket.on(\"sentBackFromServer\", (data) => {\n  //   console.log(data);\n  // });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !chat ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"join-page\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"JOIN ROOM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"What's your name ?\",\n            id: \"join-input\",\n            onChange: e => {\n              setName(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"join-btn\",\n            onClick: join,\n            children: \"Join Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-box\",\n        children: [allChat.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: message.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: message.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: message.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sent\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Write Something ...\",\n            onChange: e => {\n              setSendMessage(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sentMessage,\n            children: \"Sent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Nl8L7xORcuEuTfL+4TkuOWvTv9k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/project/Front-End/Real-TIme-Chat-APP/real-time-chat-app/src/App.js"],"names":["useEffect","useState","io","socket","connect","App","name","setName","chat","setChat","sendMessage","setSendMessage","allChat","setAllChat","room_id","data","joinRoom","length","emit","on","console","log","e","target","value","join","map","message","time","author","sentMessage"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./css/App.css\";\nimport io from \"socket.io-client\";\n\nconst socket = io.connect(\"http://localhost:4001\");\n\nfunction App() {\n  //STATE//\n  const [name, setName] = useState(\"\");\n  const [chat, setChat] = useState(false);\n  const [sendMessage, setSendMessage] = useState(\"\");\n  const [allChat, setAllChat] = useState([]);\n  const room_id = 1;\n\n  // function join() {\n  //   if (name !== \"\" && name.length >= 3) {\n  //     setChat(true);\n  //     socket.emit(\"join_room\", name, room_id);\n  //   }\n  // }\n\n  // const UserData = {\n  //   room_id: room_id,\n  //   message: sendMessage,\n  //   author: name,\n  //   time:\n  //     new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes(),\n  // };\n\n  // const sentMessage = async () => {\n  //   if (sendMessage !== \"\") {\n  //     await socket.emit(\"myData\", UserData);\n  //   }\n  // };\n  const data = \"test\";\n\n  const joinRoom = () => {\n    if (name !== \"\" && name.length >= 3) {\n      setChat(true);\n      socket.emit(\"join_room\", name, room_id);\n    }\n  };\n\n  useEffect(() => {\n    socket.on(\"back\", (data) => {\n      console.log(data);\n    });\n  }, [socket]);\n\n  // socket.on(\"sentBackFromServer\", (data) => {\n  //   console.log(data);\n  // });\n\n  return (\n    <div>\n      {!chat ? (\n        <div className=\"container\">\n          <div className=\"join-page\">\n            <h2>JOIN ROOM</h2>\n            <div className=\"box-wrapper\">\n              <input\n                placeholder=\"What's your name ?\"\n                id=\"join-input\"\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n              />\n              <button id=\"join-btn\" onClick={join}>\n                Join Chat\n              </button>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"container\">\n          <h1>Chat Room</h1>\n          <div className=\"chat-box\">\n            {allChat.map((message) => (\n              <div className=\"message-item\">\n                <h3>{message.message}</h3>\n                <h5>{message.time}</h5>\n                <h4>{message.author}</h4>\n              </div>\n            ))}\n\n            <div className=\"sent\">\n              <input\n                placeholder=\"Write Something ...\"\n                onChange={(e) => {\n                  setSendMessage(e.target.value);\n                }}\n              />\n              <button onClick={sentMessage}>Sent</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}