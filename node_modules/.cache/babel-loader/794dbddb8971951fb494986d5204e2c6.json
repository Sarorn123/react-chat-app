{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\project\\\\Front-End\\\\Real-TIme-Chat-APP\\\\real-time-chat-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./css/App.css\";\nimport io from \"socket.io-client\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\nimport { AiFillMessage } from \"react-icons/ai\";\nimport SnackBar from \"./SnackBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:4001\");\n\nfunction App() {\n  _s();\n\n  //STATE//\n  const [name, setName] = useState(\"\");\n  const [chat, setChat] = useState(false);\n  const [sendMessage, setSendMessage] = useState(\"\");\n  const [allChat, setAllChat] = useState([]);\n  const [Snack, setSnack] = useState(\"\");\n  const [user, setuser] = useState([]);\n  const room_id = 1;\n\n  function formatAMPM(date) {\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    var ampm = hours >= 12 ? \"pm\" : \"am\";\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    var strTime = hours + \":\" + minutes + \" \" + ampm;\n    return strTime;\n  }\n\n  const UserData = {\n    room_id: room_id,\n    message: sendMessage,\n    author: name,\n    time: formatAMPM(new Date())\n  };\n\n  const sentMessage = async () => {\n    if (sendMessage !== \"\") {\n      await socket.emit(\"myData\", UserData);\n      setAllChat(list => [...list, UserData]);\n      setSendMessage(\"\");\n    }\n  };\n\n  const joinRoom = () => {\n    if (name !== \"\" && name.length >= 3) {\n      setChat(true);\n      socket.emit(\"join_room\", name, room_id);\n    }\n  }; ///message///\n\n\n  useEffect(() => {\n    socket.on(\"dataBack\", data => {\n      setAllChat(list => [...list, data]);\n    });\n  }, [socket]); ///join notification///\n\n  useEffect(() => {\n    socket.on(\"joinMessage\", joinMessage => {\n      setuser(joinMessage);\n      setSnack(joinMessage);\n    });\n  }, []);\n  console.log(user);\n\n  const handleKeyPress = event => {\n    if (event.keyCode === 13 || event.which === 13) {\n      sentMessage();\n    }\n  };\n\n  const HandleJoinRoom = event => {\n    if (event.keyCode === 13 || event.which === 13) {\n      joinRoom();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !chat ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"join-page\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"JOIN ROOM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"What's your name ?\",\n            id: \"join-input\",\n            onChange: e => {\n              setName(e.target.value);\n            },\n            onKeyPress: HandleJoinRoom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"join-btn\",\n            onClick: joinRoom,\n            children: \"Join Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: /*#__PURE__*/_jsxDEV(AiFillMessage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-box\",\n        children: [/*#__PURE__*/_jsxDEV(ScrollToBottom, {\n          className: \"scroll\",\n          children: allChat.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: name !== message.author ? \"message-item\" : \"item-author\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: name !== message.author ? \"h3\" : \"h3-author\",\n              children: message.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: name === message.author ? \"You\" : message.author\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: message.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sent\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Write Something ...\",\n            value: sendMessage,\n            onChange: e => {\n              setSendMessage(e.target.value);\n            },\n            onKeyPress: handleKeyPress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sentMessage,\n            children: \"Sent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SnackBar, {\n        data: Snack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"v83v+nq1wbSopsvB0WqjERk13Yw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/project/Front-End/Real-TIme-Chat-APP/real-time-chat-app/src/App.js"],"names":["useEffect","useState","io","ScrollToBottom","AiFillMessage","SnackBar","socket","connect","App","name","setName","chat","setChat","sendMessage","setSendMessage","allChat","setAllChat","Snack","setSnack","user","setuser","room_id","formatAMPM","date","hours","getHours","minutes","getMinutes","ampm","strTime","UserData","message","author","time","Date","sentMessage","emit","list","joinRoom","length","on","data","joinMessage","console","log","handleKeyPress","event","keyCode","which","HandleJoinRoom","e","target","value","map","display"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./css/App.css\";\nimport io from \"socket.io-client\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\nimport { AiFillMessage } from \"react-icons/ai\";\nimport SnackBar from \"./SnackBar\";\n\nconst socket = io.connect(\"http://localhost:4001\");\n\nfunction App() {\n  //STATE//\n  const [name, setName] = useState(\"\");\n  const [chat, setChat] = useState(false);\n  const [sendMessage, setSendMessage] = useState(\"\");\n  const [allChat, setAllChat] = useState([]);\n  const [Snack, setSnack] = useState(\"\");\n  const [user, setuser] = useState([]);\n  const room_id = 1;\n\n  function formatAMPM(date) {\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    var ampm = hours >= 12 ? \"pm\" : \"am\";\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    var strTime = hours + \":\" + minutes + \" \" + ampm;\n    return strTime;\n  }\n\n  const UserData = {\n    room_id: room_id,\n    message: sendMessage,\n    author: name,\n    time: formatAMPM(new Date()),\n  };\n\n  const sentMessage = async () => {\n    if (sendMessage !== \"\") {\n      await socket.emit(\"myData\", UserData);\n      setAllChat((list) => [...list, UserData]);\n      setSendMessage(\"\");\n    }\n  };\n\n  const joinRoom = () => {\n    if (name !== \"\" && name.length >= 3) {\n      setChat(true);\n      socket.emit(\"join_room\", name, room_id);\n    }\n  };\n\n  ///message///\n  useEffect(() => {\n    socket.on(\"dataBack\", (data) => {\n      setAllChat((list) => [...list, data]);\n    });\n  }, [socket]);\n\n  ///join notification///\n  useEffect(() => {\n    socket.on(\"joinMessage\", (joinMessage) => {\n      setuser(joinMessage);\n      setSnack(joinMessage);\n    });\n  }, []);\n\n  console.log(user);\n\n  const handleKeyPress = (event) => {\n    if (event.keyCode === 13 || event.which === 13) {\n      sentMessage();\n    }\n  };\n\n  const HandleJoinRoom = (event) => {\n    if (event.keyCode === 13 || event.which === 13) {\n      joinRoom();\n    }\n  };\n\n  return (\n    <div>\n      {!chat ? (\n        <div className=\"container\">\n          <div className=\"join-page\">\n            <h2>JOIN ROOM</h2>\n            <div className=\"box-wrapper\">\n              <input\n                placeholder=\"What's your name ?\"\n                id=\"join-input\"\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n                onKeyPress={HandleJoinRoom}\n              />\n              <button id=\"join-btn\" onClick={joinRoom}>\n                Join Chat\n              </button>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"container\">\n          {/* <SnackBar />; */}\n          <h1>\n            <AiFillMessage />\n          </h1>\n          <div className=\"chat-box\">\n            <ScrollToBottom className=\"scroll\">\n              {allChat.map((message) => (\n                <div\n                  className={\n                    name !== message.author ? \"message-item\" : \"item-author\"\n                  }\n                >\n                  <h3 className={name !== message.author ? \"h3\" : \"h3-author\"}>\n                    {message.message}\n                  </h3>\n                  <div\n                    style={{\n                      display: \"flex\",\n                    }}\n                  >\n                    <h4>{name === message.author ? \"You\" : message.author}</h4>\n                    <h5>{message.time}</h5>\n                  </div>\n                </div>\n              ))}\n            </ScrollToBottom>\n            <div className=\"sent\">\n              <input\n                placeholder=\"Write Something ...\"\n                value={sendMessage}\n                onChange={(e) => {\n                  setSendMessage(e.target.value);\n                }}\n                onKeyPress={handleKeyPress}\n              />\n              <button onClick={sentMessage}>Sent</button>\n            </div>\n          </div>\n          <SnackBar data={Snack} />;\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}